### No need to enable the following in wp-config.php
# define('FORCE_SSL_ADMIN', true);
# define('FORCE_SSL_LOGIN', true);

### Process non-SSL requests
server {
    listen 80;
    server_name domainname.com;
    index index.php;

    # Replace the path with the actual path to WordPress core files
    root /home/username/sites/domainname.com/wordpress;

    # Process PHP requests
    location ~ \.php$ {
        # Request to wp-login to go through HTTPS protocol
        location ~ /wp-(admin|login) {
            return 301 https://$host$request_uri;
        }

        # Process non-admin requests
        try_files                $uri =404;
        include "fastcgi_params";
        fastcgi_index            index.php;
        fastcgi_param            SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass             fpm;
    }

    # Nginx way of mod_write
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

}
server {
    listen 443 ssl;
    server_name domainname.com;
    index index.php;

    # Replace the path with the actual path to WordPress core files
    root /home/username/sites/domainname.com/wordpress;

    # Generate Certificates
    # http://wiki.nginx.org/HttpSslModule#Generate_Certificates
    ssl_certificate /path/to/combined.crt;
    ssl_certificate_key /path/to/server.key;

    # Logs
    access_log /var/log/nginx/domainname.com-access.log;
    error_log /var/log/nginx/domainname.com-error.log;

    # Process requests to wp-admin/* and wp-login.php
    location ~ /wp-(admin|login) {
        location ~ \.php$ {
            try_files                $uri =404;
            fastcgi_split_path_info  ^(.+\.php)(/.+)$;

            fastcgi_index            index.php;
            fastcgi_param            SCRIPT_FILENAME    $document_root$fastcgi_script_name;
            fastcgi_intercept_errors on;
            fastcgi_pass             fpm;
        }
    }

    # Process non-admin requests
    include globals/common-locations.conf;

    # To avoid displaying posts and post previews in HTTPS
    location / {
        return 301 http://domainname.com$request_uri;
    }

}
