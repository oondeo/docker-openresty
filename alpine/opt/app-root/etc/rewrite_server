server {

  listen 8081;
  server_name _;
  
  access_log /dev/stderr main;
  include /opt/verynginx/verynginx/nginx_conf/in_server_block.conf;
  location / {

    proxy_pass http://127.0.0.1:8080;
    
    proxy_set_header Host "{{DOMAIN_PROD}}";  
    proxy_set_header Accept-Encoding "";
    
    proxy_set_header        X-Forwarded-Host  "{{DOMAIN_PROD}}";
    
    proxy_redirect                  http://{{DOMAIN_PROD}}/ /;
    proxy_redirect                  http://{{DOMAIN_PROD}}:8080/ /;
  

    proxy_cookie_domain             '{{DOMAIN_PROD}}' "$host";
      sub_filter_once off;
            sub_filter_types *;                                                         
            sub_filter "{{DOMAIN_PROD}}" "$host" ;
        
  
   # replace request
   access_by_lua_block{

if ngx.req.get_method() == "POST" then   
    ngx.req.read_body()
    local data = ngx.req.get_body_data() 
    if data then
      local newargs, n, err = ngx.re.gsub(data, "$host", "{{DOMAIN_PROD}}") 
      ngx.req.set_body_data(newargs)
    end
    local file = ngx.req.get_body_file()
    if file then                                                                                         
      local newargs, n, err = ngx.re.gsub(file, "$host", "{{DOMAIN_PROD}}")
      ngx.req.set_body_data(newargs)
    end 
else
  local args = ngx.req.get_uri_args()
  local newargs = {}
  for key, val in pairs(args) do
    if type(val) == "string" then
      local newval, n , err =  ngx.re.gsub(val, "$host", "{{DOMAIN_PROD}}")
      newargs[key]=newval
    else
      newargs[key]=val
    end
  end
        ngx.req.set_uri_args(newargs)
end

    }

#   #rewrite reponse
#     body_filter_by_lua_block{
#local resp_body = string.sub(ngx.arg[1], 1, 1000)  -- arg[1] contains a chunk of response content
#ngx.ctx.buffered = string.sub((ngx.ctx.buffered or "") .. resp_body, 1, 1000)
#if ngx.arg[2] and ngx.req.get_method() == "POST" then  -- arg[2] is true if this is the last chunk
#  ngx.log(ngx.STDERR,ngx.ctx.buffered)
#end  
#   }

  }

}
